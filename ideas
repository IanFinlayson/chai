Things to add in:
    - list comprehensions
    - generators, lazy sequences
    - classes or alternative...
    - libraries


Roadmap:
    - write random code samples for each feature
    - write a tree-walking interpreter in Java, not
      efficient but easy to try things out in
    - write a more efficient compiler/VM backend


Features:
    - Python based syntax
    - static typing with local inference
    - first class functions
    - type parameters (a la ML)
    - higher order functions
    - GC
    - currying
    - algebraic types
    - no nulls
    - closures
    - lists, dicts, tuples, sets
    - destructuring of unions, tuples and lists, at least

    - classes and/or protocols and/or traits?
    
